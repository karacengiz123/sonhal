parameters:
  # Adds a fallback DATABASE_URL if the env var is not set.
  # This allows you to run cache:warmup even if your
  # environment variables are not available yet.
  # You should not need to change this value.
  env(DATABASE_URL): ''

doctrine:
  dbal:
    default_connection: default
    connections:
      default:
        # configure these for your database server
        url: '%env(DATABASE_URL)%'
        driver: 'pdo_mysql'
#        server_version: 'mariadb-10.4.8' # Local Db Ayarı
        default_table_options:
          charset: utf8
          collate: utf8_general_ci
        mapping_types:
          enum: string
      asterisk:
        # configure these for your database server
        url: '%env(DATABASE_ASTERISK_URL)%'
        driver: 'pdo_mysql'
        server_version: 'mariadb-5.5.60' # Server Db Ayarı
#        server_version: 'mariadb-10.4.8' # Local Db Ayarı
        default_table_options:
          charset: utf8
          collate: utf8_general_ci
        mapping_types:
          enum: string

      session:
        # configure these for your database server
        url: '%env(SESSION_DATABASE_URL)%'
        driver: 'pdo_mysql'
        server_version: 'mariadb-5.5.60' # Server Db Ayarı
#        server_version: 'mariadb-10.4.8' # Local Db Ayarı
        default_table_options:
          charset: utf8
          collate: utf8_general_ci
        mapping_types:
          enum: string

#      log:
#        # configure these for your database server
#        url: '%env(DATABASE_URL)%'
#        driver: 'pdo_mysql'
#        server_version: '5.7'
#        charset: UTF8

    # With Symfony 3.3, remove the `resolve:` prefix




  orm:

    default_entity_manager: default
    entity_managers:
      default:
        filters:
          softdeleteable:
            class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
            enabled: true
        entity_listener_resolver: doctrine.orm.container_aware_entity_listener_resolver
        connection: default
        naming_strategy:              doctrine.orm.naming_strategy.underscore
        mappings:
          Main:
            type: annotation
            dir: '%kernel.project_dir%/src/Entity'
            prefix: 'App\Entity'
            alias: Main
          Gedmo:
            type: annotation
            dir: '%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity'
            prefix: 'Gedmo\Loggable\Entity\'
            alias: Gedmo
      asterisk:
        auto_mapping: true
        connection: asterisk
        naming_strategy:              doctrine.orm.naming_strategy.underscore
        mappings:
          AsteriskBundle:
            type: annotation
            dir: '%kernel.project_dir%/src/Asterisk/Entity'
            prefix: 'App\Asterisk\Entity'
            alias: Asterisk

      session:
        connection: session
        naming_strategy:              doctrine.orm.naming_strategy.underscore
        mappings:
          AsteriskBundle:
            type: annotation
            dir: '%kernel.project_dir%/src/Entity/Session'
            prefix: 'App\Entity\Session'
            alias: Session


#      log:
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        connection: log
#        mappings:
#          gedmo_loggable:
#            is_bundle: false
#            type: annotation
#            dir: '%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity'
#            prefix: 'Gedmo\Loggable\Entity'
#            alias: GedmoLoggable

services:
  gedmo.listener.timestampable:
    class: Gedmo\Timestampable\TimestampableListener
    tags:
      - { name: doctrine.event_subscriber, connection: default }
    calls:
      - [ setAnnotationReader, [ "@annotation_reader" ] ]